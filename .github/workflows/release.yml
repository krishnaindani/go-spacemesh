name: Publish Release

on:
  push:
    branches-ignore:
      - 'master'
    tags-ignore:
      - v0.*

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.14.13' 
      
      - if: matrix.os == 'windows-latest'
        name: Install make in windows
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install make
      
      - name: Setup Go environment
        run: make install
      
      - name: Read version.txt
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./version.txt
      
      - name: Build go-spacemesh
        run: make build GO_SPACEMESH_VERSION=${{ steps.version.outputs.content }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
        name: upload macos build
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ./build/go-spacemesh
          destination: ${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/${{ matrix.os }}
      
      - if: matrix.os == 'windows-latest'
        name: upload macos build
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: ./build/go-spacemesh.exe
          destination: ${{ secrets.GCP_BUCKET }}/${{ steps.version.outputs.content }}/${{ matrix.os }}
      